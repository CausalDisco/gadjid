# This file is autogenerated by maturin v1.3.0 + manually adapted  ##
# To update, run
#
#    maturin generate-ci github --manifest-path gadjid_python/Cargo.toml
#
name: CI_maturin_python  ##

on:
  push:
    ##branches:
      ##- main
      ##- master
    tags:
      ##- '*'
      - 'v*.*.*'
  ##pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  validate-version: ###
    name: Validate version tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check version
        if: "startsWith(github.ref, 'refs/tags/v')"
        run: |
            echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
            GITHUB_TAG_VERSION=${GITHUB_REF_NAME%"+test"}
            echo "GITHUB_TAG_VERSION: $GITHUB_TAG_VERSION"
            GADJID_VERSION=$(grep -m1 version gadjid/Cargo.toml  | tr -s ' ' | tr -d '"' | tr -d "'" | cut -d' ' -f3)
            echo "GADJID_VERSION: $GADJID_VERSION"
            GADJID_PYTHON_VERSION=$(grep -m1 version gadjid_python/Cargo.toml  | tr -s ' ' | tr -d '"' | tr -d "'" | cut -d' ' -f3)
            echo "GADJID_PYTHON_VERSION: $GADJID_PYTHON_VERSION"
            [ "$GADJID_VERSION" = "$GADJID_PYTHON_VERSION" ] || (echo "versions in Cargo.toml files differ"; exit 1)
            [ "$GITHUB_TAG_VERSION" = "v$GADJID_VERSION" ] || (echo "version tag differs from versions in Cargo.toml files"; exit 1)
            echo "valid version tag"
      - if: "github.event_name == 'workflow_dispatch'"
        run: echo "manually triggered"
      - if: "!startsWith(github.ref, 'refs/tags/v') && !github.event_name == 'workflow_dispatch'"
        run: |
            echo "neither a valid version tag nor manually triggered"
            exit 1

  test-lint: ###
    uses: ./.github/workflows/test-lint.yml
    needs: validate-version

  linux:
    runs-on: ubuntu-latest
    needs: test-lint ##
    strategy:
      matrix:
        ##target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path gadjid_python/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    needs: test-lint ##
    strategy:
      matrix:
        ##target: [x64, x86]
        target: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path gadjid_python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    needs: test-lint ##
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path gadjid_python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    needs: test-lint ##
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path gadjid_python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    ##if: "startsWith(github.ref, 'refs/tags/')"
    if: "startsWith(github.ref, 'refs/tags/v')"
    needs: [linux, windows, macos, sdist]
    environment: pypi  ##
    permissions:  ##
      id-token: write  ##
    steps:
      - name: Decide between PyPI and TestPyPI ###
        id: repository
        run: |
            echo "MATURIN_REPOSITORY=pypi" > $GITHUB_OUTPUT
            [[ "$GITHUB_REF_NAME" == *"+test" ]] && echo "MATURIN_REPOSITORY=testpypi" > $GITHUB_OUTPUT || true
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          ##MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
          MATURIN_REPOSITORY: ${{ steps.repository.outputs.MATURIN_REPOSITORY }} ##
        with:
          command: upload
          args: --non-interactive --skip-existing *
